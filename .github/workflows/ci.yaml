name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.23.5"
          cache: true

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v -coverprofile=cover.out ./...

      # - name: Run benchmarks
      #   run: go test -bench=. -benchmem ./test/...

      - name: Generate test coverage report
        run: go tool cover -html=cover.out -o test-coverage.html

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-report
          path: ./test-coverage.html

  golangci-lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      GOFLAGS: "-buildvcs=false"
    steps:
      - uses: actions/checkout@v4

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    env:
      GOFLAGS: "-buildvcs=false"
    steps:
      - uses: actions/checkout@v4

      - name: Run gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude=G304 ./...

  build-docker:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -f build/package/Dockerfile -t fotodeck:${{ github.sha }} .
          docker tag fotodeck:${{ github.sha }} fotodeck:latest
